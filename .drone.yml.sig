eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGJ1aWxkX2ltYWdlX3ByOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IG5naW54LXByb3h5LWdvdnVrIC4KICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdWxsX3JlcXVlc3QKCiAgYnVpbGRfaW1hZ2VfdGFnOgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IG5naW54LXByb3h5LWdvdnVrOiR7RFJPTkVfVEFHfSAuCiAgICB3aGVuOgogICAgICBldmVudDogdGFnCgogIHB1c2hfaW1hZ2U6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBSRVBPPSJhcnRpZmFjdG9yeS1pbnRlcm5hbC5kaWdpdGFsLmhvbWVvZmZpY2UuZ292LnVrIgogICAgICAtIEJBU0U9Ii8iCiAgICAgIC0gTkFNRT0ibmdpbngtcHJveHktZ292dWsiCiAgICAgIC0gRlVMTF9OQU1FPSIke1JFUE99JHtCQVNFfSR7TkFNRX0iCiAgICAgIC0gRE9DS0VSX1VTRVJOQU1FPSJsZXYtd2ViLXJvYm90IgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0iJHtET0NLRVJfVVNFUk5BTUV9IiAtcD0iJHtET0NLRVJfUEFTU1dPUkR9IiAiJHtSRVBPfSIKICAgICAgLSBkb2NrZXIgdGFnIG5naW54LXByb3h5LWdvdnVrOiR7RFJPTkVfVEFHfSAiJHtGVUxMX05BTUV9OiR7RFJPTkVfVEFHfSIKICAgICAgLSBkb2NrZXIgdGFnIG5naW54LXByb3h5LWdvdnVrOiR7RFJPTkVfVEFHfSAiJHtGVUxMX05BTUV9OmxhdGVzdCIKICAgICAgLSBkb2NrZXIgcHVzaCAiJHtGVUxMX05BTUV9OiR7RFJPTkVfVEFHfSIKICAgICAgLSBkb2NrZXIgcHVzaCAiJHtGVUxMX05BTUV9OmxhdGVzdCIKICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOjEuMTMtZGluZAogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgY29tbWFuZDoKICAgICAgLSAiLXMiCiAgICAgIC0gIm92ZXJsYXkiCg.VHKx6YuKZkJOnWIngOiyQd7mnjhODimfy41cbVLf4r8